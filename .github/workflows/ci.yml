name: Continuous Integration

on:
  push:
    branches:
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      # Cache npm dependencies (from GitHub docs)
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # If there's a cache miss
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      # Caching process complete

      - name: Install dependencies
        run: npm install

      - name: Lint check
        run: npm run lint

      - name: Run tests
        run: npm run test

  trigger-cd-on-success:
    needs: lint-and-test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CD Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            # This action internally uses the provided github-token to authenticate API requests.
            # We use it to trigger the cd.yml workflow.
            const response = await octokit.actions.createWorkflowDispatch({
              owner: 'dg1223',
              repo: 'Gamchha',
              workflow_id: 'develop-cd.yml',
              ref: 'develop',
              inputs: {}
            });
            console.log(response);
